
import java.awt.Color;
import java.awt.FontFormatException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import fontPackage.fontStyles;
import org.jdesktop.swingx.prompt.PromptSupport;
import roundedFields.roundedTextField;
import roundedFields.roundedPassField;
import dbConn.oraDBCredentials;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kevin
 */
public class registerForm extends javax.swing.JFrame {
    oraDBCredentials db = new oraDBCredentials();
    /**
     * Creates new form registerForm
     * @throws java.awt.FontFormatException
     * @throws java.awt.FontFormatException
     */
    public registerForm() throws FontFormatException, IOException {
        initComponents();
        this.getContentPane().setBackground(new Color(248, 244, 235));
        this.setTitle("Registration Form");
        this.setLocationRelativeTo(null);
        
        
        setTextDesigns();
        PromptSupport.setPrompt("Name", txt_User);
        PromptSupport.setPrompt("Password", txt_Pass);
        PromptSupport.setPrompt("Confirm Password", txt_Cpass);
    }
 public final void setTextDesigns() throws FontFormatException, IOException{
        txt_User.setFont(fontStyles.setMaely(24));
        txt_Pass.setFont(fontStyles.setMaely(24));
        txt_Cpass.setFont(fontStyles.setMaely(24));
        btn_signUp.setFont(fontStyles.setMaely(24));
        lbl_back.setFont(fontStyles.setMaely(18));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_User = new roundedTextField(15);//javax.swing.JTextField();
        txt_Pass = new roundedPassField(15);//javax.swing.JPasswordField();
        txt_Cpass = new roundedPassField(15);//javax.swing.JPasswordField();
        btn_signUp = new javax.swing.JButton();
        lbl_back = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        txt_User.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txt_User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_UserActionPerformed(evt);
            }
        });

        txt_Pass.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txt_Cpass.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btn_signUp.setBackground(new java.awt.Color(245, 126, 154));
        btn_signUp.setText("Sign Up");
        btn_signUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_signUpMouseClicked(evt);
            }
        });

        lbl_back.setText("< Back to Login");
        lbl_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_backMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_backMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_backMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_signUp, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_Cpass, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Pass, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_User, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbl_back)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_back)
                .addGap(25, 25, 25)
                .addComponent(txt_User, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_Pass, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_Cpass, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_signUp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_UserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_UserActionPerformed

    private void btn_signUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_signUpMouseClicked
        try {
            // TODO add your handling code here:
            register();
        } catch (IOException ex) {
            Logger.getLogger(registerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FontFormatException ex) {
            Logger.getLogger(registerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(registerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_signUpMouseClicked

    private void lbl_backMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseEntered
        // TODO add your handling code here:
        lbl_back.setForeground(new Color(14,155,0));
    }//GEN-LAST:event_lbl_backMouseEntered

    private void lbl_backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseExited
        // TODO add your handling code here:
        lbl_back.setForeground(Color.BLACK);
    }//GEN-LAST:event_lbl_backMouseExited

    private void lbl_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_backMouseClicked
        // TODO add your handling code here:
        this.dispose();
        try {
            new loginForm().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(registerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FontFormatException ex) {
            Logger.getLogger(registerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lbl_backMouseClicked

    private void register() throws IOException, FontFormatException, SQLException{
        
        if(txt_User.getText().isEmpty() || txt_Pass.getText().isEmpty() || txt_Cpass.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Input all text-fields");
        }else if(txt_Pass.getText().equals(txt_Cpass.getText())){;
            registerUser(checkUnique());
        }else{
            JOptionPane.showMessageDialog(null,"Password must be the same!"); 
        }   
    }
    private boolean checkUnique() throws SQLException{
        db.conn = DriverManager.getConnection(db.DB_URL, db.USER, db.PASS);
        String username = txt_User.getText();
        String sql = String.format("SELECT count(user_id) from LOGIN WHERE user_id = '%s'",username);
      
        PreparedStatement ps = db.conn.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();
        rs.next(); 
        int count = rs.getInt(1);
        if(count > 0){
            JOptionPane.showMessageDialog(null,"Username Already exists, please input another one.");
            return false;
        }
        return true;
    }
    private void registerUser(boolean allow) throws SQLException, IOException, FontFormatException{
        if(allow){
            db.conn = DriverManager.getConnection(db.DB_URL, db.USER, db.PASS);
            db.stmt = db.conn.createStatement();
            String sql = String.format("INSERT INTO login (user_id,user_pass) "
                    + "VALUES('%s','%s')",txt_User.getText(),txt_Pass.getText());
            db.stmt.executeUpdate(sql);
            sql = String.format("INSERT INTO ENGLISH (account_id) "
                    + "SELECT account_id from login where user_id = '%s'",txt_User.getText());
            db.stmt.executeUpdate(sql);
            sql = String.format("INSERT INTO GEOGRAPHY (account_id) "
                    + "SELECT account_id from login where user_id = '%s'",txt_User.getText());
            db.stmt.executeUpdate(sql);
            sql = String.format("INSERT INTO MATH (account_id) "
                    + "SELECT account_id from login where user_id = '%s'",txt_User.getText());
            db.stmt.executeUpdate(sql);
            sql = String.format("INSERT INTO MUSICARTS (account_id) "
                    + "SELECT account_id from login where user_id = '%s'",txt_User.getText());
            db.stmt.executeUpdate(sql);
            sql = String.format("INSERT INTO SCIENCE (account_id) "
                    + "SELECT account_id from login where user_id = '%s'",txt_User.getText());
            db.stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "You have been registered!");
            this.dispose();
            new loginForm().setVisible(true);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new registerForm().setVisible(true);
                } catch (FontFormatException ex) {
                    Logger.getLogger(registerForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(registerForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_signUp;
    private javax.swing.JLabel lbl_back;
    private javax.swing.JPasswordField txt_Cpass;
    private javax.swing.JPasswordField txt_Pass;
    private javax.swing.JTextField txt_User;
    // End of variables declaration//GEN-END:variables
}
